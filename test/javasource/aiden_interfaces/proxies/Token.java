// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package aiden_interfaces.proxies;

public class Token implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject tokenMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Aiden_Interfaces.Token";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		TokenType("TokenType"),
		Scope("Scope"),
		ExpiresIn("ExpiresIn"),
		ExpiresAt("ExpiresAt"),
		AccessToken("AccessToken"),
		RefreshToken("RefreshToken"),
		Token_Host("Aiden_Interfaces.Token_Host");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Token(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Token(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject tokenMendixObject)
	{
		if (tokenMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!tokenMendixObject.isInstanceOf(entityName)) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.tokenMendixObject = tokenMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static aiden_interfaces.proxies.Token initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new aiden_interfaces.proxies.Token(context, mendixObject);
	}

	public static aiden_interfaces.proxies.Token load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return aiden_interfaces.proxies.Token.initialize(context, mendixObject);
	}

	public static java.util.List<aiden_interfaces.proxies.Token> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> aiden_interfaces.proxies.Token.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of TokenType
	 */
	public final java.lang.String getTokenType()
	{
		return getTokenType(getContext());
	}

	/**
	 * @param context
	 * @return value of TokenType
	 */
	public final java.lang.String getTokenType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.TokenType.toString());
	}

	/**
	 * Set value of TokenType
	 * @param tokentype
	 */
	public final void setTokenType(java.lang.String tokentype)
	{
		setTokenType(getContext(), tokentype);
	}

	/**
	 * Set value of TokenType
	 * @param context
	 * @param tokentype
	 */
	public final void setTokenType(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String tokentype)
	{
		getMendixObject().setValue(context, MemberNames.TokenType.toString(), tokentype);
	}

	/**
	 * @return value of Scope
	 */
	public final java.lang.String getScope()
	{
		return getScope(getContext());
	}

	/**
	 * @param context
	 * @return value of Scope
	 */
	public final java.lang.String getScope(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Scope.toString());
	}

	/**
	 * Set value of Scope
	 * @param scope
	 */
	public final void setScope(java.lang.String scope)
	{
		setScope(getContext(), scope);
	}

	/**
	 * Set value of Scope
	 * @param context
	 * @param scope
	 */
	public final void setScope(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String scope)
	{
		getMendixObject().setValue(context, MemberNames.Scope.toString(), scope);
	}

	/**
	 * @return value of ExpiresIn
	 */
	public final java.lang.Integer getExpiresIn()
	{
		return getExpiresIn(getContext());
	}

	/**
	 * @param context
	 * @return value of ExpiresIn
	 */
	public final java.lang.Integer getExpiresIn(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.ExpiresIn.toString());
	}

	/**
	 * Set value of ExpiresIn
	 * @param expiresin
	 */
	public final void setExpiresIn(java.lang.Integer expiresin)
	{
		setExpiresIn(getContext(), expiresin);
	}

	/**
	 * Set value of ExpiresIn
	 * @param context
	 * @param expiresin
	 */
	public final void setExpiresIn(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer expiresin)
	{
		getMendixObject().setValue(context, MemberNames.ExpiresIn.toString(), expiresin);
	}

	/**
	 * @return value of ExpiresAt
	 */
	public final java.util.Date getExpiresAt()
	{
		return getExpiresAt(getContext());
	}

	/**
	 * @param context
	 * @return value of ExpiresAt
	 */
	public final java.util.Date getExpiresAt(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.ExpiresAt.toString());
	}

	/**
	 * Set value of ExpiresAt
	 * @param expiresat
	 */
	public final void setExpiresAt(java.util.Date expiresat)
	{
		setExpiresAt(getContext(), expiresat);
	}

	/**
	 * Set value of ExpiresAt
	 * @param context
	 * @param expiresat
	 */
	public final void setExpiresAt(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date expiresat)
	{
		getMendixObject().setValue(context, MemberNames.ExpiresAt.toString(), expiresat);
	}

	/**
	 * @return value of AccessToken
	 */
	public final java.lang.String getAccessToken()
	{
		return getAccessToken(getContext());
	}

	/**
	 * @param context
	 * @return value of AccessToken
	 */
	public final java.lang.String getAccessToken(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.AccessToken.toString());
	}

	/**
	 * Set value of AccessToken
	 * @param accesstoken
	 */
	public final void setAccessToken(java.lang.String accesstoken)
	{
		setAccessToken(getContext(), accesstoken);
	}

	/**
	 * Set value of AccessToken
	 * @param context
	 * @param accesstoken
	 */
	public final void setAccessToken(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String accesstoken)
	{
		getMendixObject().setValue(context, MemberNames.AccessToken.toString(), accesstoken);
	}

	/**
	 * @return value of RefreshToken
	 */
	public final java.lang.String getRefreshToken()
	{
		return getRefreshToken(getContext());
	}

	/**
	 * @param context
	 * @return value of RefreshToken
	 */
	public final java.lang.String getRefreshToken(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.RefreshToken.toString());
	}

	/**
	 * Set value of RefreshToken
	 * @param refreshtoken
	 */
	public final void setRefreshToken(java.lang.String refreshtoken)
	{
		setRefreshToken(getContext(), refreshtoken);
	}

	/**
	 * Set value of RefreshToken
	 * @param context
	 * @param refreshtoken
	 */
	public final void setRefreshToken(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String refreshtoken)
	{
		getMendixObject().setValue(context, MemberNames.RefreshToken.toString(), refreshtoken);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Token_Host
	 */
	public final aiden_interfaces.proxies.Host getToken_Host() throws com.mendix.core.CoreException
	{
		return getToken_Host(getContext());
	}

	/**
	 * @param context
	 * @return value of Token_Host
	 * @throws com.mendix.core.CoreException
	 */
	public final aiden_interfaces.proxies.Host getToken_Host(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		aiden_interfaces.proxies.Host result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Token_Host.toString());
		if (identifier != null) {
			result = aiden_interfaces.proxies.Host.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Token_Host
	 * @param token_host
	 */
	public final void setToken_Host(aiden_interfaces.proxies.Host token_host)
	{
		setToken_Host(getContext(), token_host);
	}

	/**
	 * Set value of Token_Host
	 * @param context
	 * @param token_host
	 */
	public final void setToken_Host(com.mendix.systemwideinterfaces.core.IContext context, aiden_interfaces.proxies.Host token_host)
	{
		if (token_host == null) {
			getMendixObject().setValue(context, MemberNames.Token_Host.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Token_Host.toString(), token_host.getMendixObject().getId());
		}
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return tokenMendixObject;
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final aiden_interfaces.proxies.Token that = (aiden_interfaces.proxies.Token) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
