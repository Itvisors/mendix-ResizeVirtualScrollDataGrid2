// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package aiden_interfaces.proxies;

public class AzureMetricProperty implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject azureMetricPropertyMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Aiden_Interfaces.AzureMetricProperty";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		PropertyKey("PropertyKey"),
		PropertyValue("PropertyValue");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public AzureMetricProperty(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected AzureMetricProperty(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject azureMetricPropertyMendixObject)
	{
		if (azureMetricPropertyMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!azureMetricPropertyMendixObject.isInstanceOf(entityName)) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.azureMetricPropertyMendixObject = azureMetricPropertyMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static aiden_interfaces.proxies.AzureMetricProperty initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new aiden_interfaces.proxies.AzureMetricProperty(context, mendixObject);
	}

	public static aiden_interfaces.proxies.AzureMetricProperty load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return aiden_interfaces.proxies.AzureMetricProperty.initialize(context, mendixObject);
	}

	/**
	 * @return value of PropertyKey
	 */
	public final java.lang.String getPropertyKey()
	{
		return getPropertyKey(getContext());
	}

	/**
	 * @param context
	 * @return value of PropertyKey
	 */
	public final java.lang.String getPropertyKey(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PropertyKey.toString());
	}

	/**
	 * Set value of PropertyKey
	 * @param propertykey
	 */
	public final void setPropertyKey(java.lang.String propertykey)
	{
		setPropertyKey(getContext(), propertykey);
	}

	/**
	 * Set value of PropertyKey
	 * @param context
	 * @param propertykey
	 */
	public final void setPropertyKey(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String propertykey)
	{
		getMendixObject().setValue(context, MemberNames.PropertyKey.toString(), propertykey);
	}

	/**
	 * @return value of PropertyValue
	 */
	public final java.lang.String getPropertyValue()
	{
		return getPropertyValue(getContext());
	}

	/**
	 * @param context
	 * @return value of PropertyValue
	 */
	public final java.lang.String getPropertyValue(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PropertyValue.toString());
	}

	/**
	 * Set value of PropertyValue
	 * @param propertyvalue
	 */
	public final void setPropertyValue(java.lang.String propertyvalue)
	{
		setPropertyValue(getContext(), propertyvalue);
	}

	/**
	 * Set value of PropertyValue
	 * @param context
	 * @param propertyvalue
	 */
	public final void setPropertyValue(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String propertyvalue)
	{
		getMendixObject().setValue(context, MemberNames.PropertyValue.toString(), propertyvalue);
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return azureMetricPropertyMendixObject;
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final aiden_interfaces.proxies.AzureMetricProperty that = (aiden_interfaces.proxies.AzureMetricProperty) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
