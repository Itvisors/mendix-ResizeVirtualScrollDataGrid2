// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package aiden_interfaces.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the Aiden_Interfaces module
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Environment_NewHostBuilder(
		aiden_interfaces.proxies.Environment _environment
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.ACT_Environment_NewHost");
		builder = builder.withParam("Environment", _environment);
		return builder;
	}

	public static void aCT_Environment_NewHost(
		IContext context,
		aiden_interfaces.proxies.Environment _environment
	)
	{
		aCT_Environment_NewHostBuilder(
				_environment
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_ExportMappingBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.ACT_ExportMapping");
		return builder;
	}

	public static void aCT_ExportMapping(IContext context)
	{
		aCT_ExportMappingBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_GenerateEnvironmentsBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.ACT_GenerateEnvironments");
		return builder;
	}

	public static void aCT_GenerateEnvironments(IContext context)
	{
		aCT_GenerateEnvironmentsBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_ProcessImportBuilder(
		aiden_interfaces.proxies.ImportExport _importExport
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.ACT_ProcessImport");
		builder = builder.withParam("ImportExport", _importExport);
		return builder;
	}

	public static void aCT_ProcessImport(
		IContext context,
		aiden_interfaces.proxies.ImportExport _importExport
	)
	{
		aCT_ProcessImportBuilder(
				_importExport
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_SaveHostBuilder(
		aiden_interfaces.proxies.Host _host
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.ACT_SaveHost");
		builder = builder.withParam("Host", _host);
		return builder;
	}

	public static void aCT_SaveHost(
		IContext context,
		aiden_interfaces.proxies.Host _host
	)
	{
		aCT_SaveHostBuilder(
				_host
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_SaveServiceBuilder(
		aiden_interfaces.proxies.Service _service
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.ACT_SaveService");
		builder = builder.withParam("Service", _service);
		return builder;
	}

	public static void aCT_SaveService(
		IContext context,
		aiden_interfaces.proxies.Service _service
	)
	{
		aCT_SaveServiceBuilder(
				_service
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Token_RequestNewBuilder(
		aiden_interfaces.proxies.Host _host
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.ACT_Token_RequestNew");
		builder = builder.withParam("Host", _host);
		return builder;
	}

	public static void aCT_Token_RequestNew(
		IContext context,
		aiden_interfaces.proxies.Host _host
	)
	{
		aCT_Token_RequestNewBuilder(
				_host
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Token_ViewBuilder(
		aiden_interfaces.proxies.Token _token
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.ACT_Token_View");
		builder = builder.withParam("Token", _token);
		return builder;
	}

	public static void aCT_Token_View(
		IContext context,
		aiden_interfaces.proxies.Token _token
	)
	{
		aCT_Token_ViewBuilder(
				_token
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aSu_Aiden_InterfacesBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.ASu_Aiden_Interfaces");
		return builder;
	}

	public static void aSu_Aiden_Interfaces(IContext context)
	{
		aSu_Aiden_InterfacesBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder cALC_GetNumberOfServicesBuilder(
		aiden_interfaces.proxies.Host _host
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.CALC_GetNumberOfServices");
		builder = builder.withParam("Host", _host);
		return builder;
	}

	public static java.lang.Long cALC_GetNumberOfServices(
		IContext context,
		aiden_interfaces.proxies.Host _host
	)
	{
		Object result = cALC_GetNumberOfServicesBuilder(
				_host
			)
			.execute(context);
		return (java.lang.Long) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder convert_DateToEpochBuilder(
		java.util.Date _conditionValidityEndDate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.Convert_DateToEpoch");
		builder = builder.withParam("ConditionValidityEndDate", _conditionValidityEndDate);
		return builder;
	}

	public static java.lang.String convert_DateToEpoch(
		IContext context,
		java.util.Date _conditionValidityEndDate
	)
	{
		Object result = convert_DateToEpochBuilder(
				_conditionValidityEndDate
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder convert_DateToStringBuilder(
		java.util.Date _futurePriceValiidtyStartDate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.Convert_DateToString");
		builder = builder.withParam("FuturePriceValiidtyStartDate", _futurePriceValiidtyStartDate);
		return builder;
	}

	public static java.lang.String convert_DateToString(
		IContext context,
		java.util.Date _futurePriceValiidtyStartDate
	)
	{
		Object result = convert_DateToStringBuilder(
				_futurePriceValiidtyStartDate
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder convert_DecimalToIntegerBuilder(
		java.math.BigDecimal _parameter
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.Convert_DecimalToInteger");
		builder = builder.withParam("Parameter", _parameter);
		return builder;
	}

	public static java.lang.Long convert_DecimalToInteger(
		IContext context,
		java.math.BigDecimal _parameter
	)
	{
		Object result = convert_DecimalToIntegerBuilder(
				_parameter
			)
			.execute(context);
		return (java.lang.Long) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder convert_DecimalToStringBuilder(
		java.math.BigDecimal _decimal
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.Convert_DecimalToString");
		builder = builder.withParam("Decimal", _decimal);
		return builder;
	}

	public static java.lang.String convert_DecimalToString(
		IContext context,
		java.math.BigDecimal _decimal
	)
	{
		Object result = convert_DecimalToStringBuilder(
				_decimal
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder convert_EpochToDateBuilder(
		java.lang.String _inputDate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.Convert_EpochToDate");
		builder = builder.withParam("InputDate", _inputDate);
		return builder;
	}

	public static java.util.Date convert_EpochToDate(
		IContext context,
		java.lang.String _inputDate
	)
	{
		Object result = convert_EpochToDateBuilder(
				_inputDate
			)
			.execute(context);
		return (java.util.Date) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder convert_IntegerToStringBuilder(
		java.math.BigDecimal _decimal
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.Convert_IntegerToString");
		builder = builder.withParam("Decimal", _decimal);
		return builder;
	}

	public static java.lang.String convert_IntegerToString(
		IContext context,
		java.math.BigDecimal _decimal
	)
	{
		Object result = convert_IntegerToStringBuilder(
				_decimal
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder convert_StringToDateBuilder(
		java.lang.String _inputDate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.Convert_StringToDate");
		builder = builder.withParam("InputDate", _inputDate);
		return builder;
	}

	public static java.util.Date convert_StringToDate(
		IContext context,
		java.lang.String _inputDate
	)
	{
		Object result = convert_StringToDateBuilder(
				_inputDate
			)
			.execute(context);
		return (java.util.Date) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder convert_StringToDecimalBuilder(
		java.lang.String _string
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.Convert_StringToDecimal");
		builder = builder.withParam("String", _string);
		return builder;
	}

	public static java.math.BigDecimal convert_StringToDecimal(
		IContext context,
		java.lang.String _string
	)
	{
		Object result = convert_StringToDecimalBuilder(
				_string
			)
			.execute(context);
		return (java.math.BigDecimal) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder convert_StringToIntgerBuilder(
		java.lang.String _string
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.Convert_StringToIntger");
		builder = builder.withParam("String", _string);
		return builder;
	}

	public static java.lang.Long convert_StringToIntger(
		IContext context,
		java.lang.String _string
	)
	{
		Object result = convert_StringToIntgerBuilder(
				_string
			)
			.execute(context);
		return (java.lang.Long) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_RetrieveMappingRecordBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.DS_RetrieveMappingRecord");
		return builder;
	}

	public static aiden_interfaces.proxies.Mapping dS_RetrieveMappingRecord(IContext context)
	{
		Object result = dS_RetrieveMappingRecordBuilder().execute(context);
		return result == null ? null : aiden_interfaces.proxies.Mapping.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder mANN_Token_CleanupBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.MANN_Token_Cleanup");
		return builder;
	}

	public static java.lang.String mANN_Token_Cleanup(IContext context)
	{
		Object result = mANN_Token_CleanupBuilder().execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder mANN_TransactionLog_CleanupBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.MANN_TransactionLog_Cleanup");
		return builder;
	}

	public static java.lang.String mANN_TransactionLog_Cleanup(IContext context)
	{
		Object result = mANN_TransactionLog_CleanupBuilder().execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder mANN_TransactionLog_DeleteAllBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.MANN_TransactionLog_DeleteAll");
		return builder;
	}

	public static java.lang.String mANN_TransactionLog_DeleteAll(IContext context)
	{
		Object result = mANN_TransactionLog_DeleteAllBuilder().execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCh_Host_DefaultLogRetentionDaysErrorBuilder(
		aiden_interfaces.proxies.Host _hosts
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.OCh_Host_DefaultLogRetentionDaysError");
		builder = builder.withParam("Hosts", _hosts);
		return builder;
	}

	public static void oCh_Host_DefaultLogRetentionDaysError(
		IContext context,
		aiden_interfaces.proxies.Host _hosts
	)
	{
		oCh_Host_DefaultLogRetentionDaysErrorBuilder(
				_hosts
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCh_Host_DefaultLogRetentionDaysSuccessBuilder(
		aiden_interfaces.proxies.Host _hosts
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.OCh_Host_DefaultLogRetentionDaysSuccess");
		builder = builder.withParam("Hosts", _hosts);
		return builder;
	}

	public static void oCh_Host_DefaultLogRetentionDaysSuccess(
		IContext context,
		aiden_interfaces.proxies.Host _hosts
	)
	{
		oCh_Host_DefaultLogRetentionDaysSuccessBuilder(
				_hosts
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCh_Host_EnvironmentBuilder(
		aiden_interfaces.proxies.Host _hosts
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.OCh_Host_Environment");
		builder = builder.withParam("Hosts", _hosts);
		return builder;
	}

	public static void oCh_Host_Environment(
		IContext context,
		aiden_interfaces.proxies.Host _hosts
	)
	{
		oCh_Host_EnvironmentBuilder(
				_hosts
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCh_Service_HostBuilder(
		aiden_interfaces.proxies.Service _service
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.OCh_Service_Host");
		builder = builder.withParam("Service", _service);
		return builder;
	}

	public static void oCh_Service_Host(
		IContext context,
		aiden_interfaces.proxies.Service _service
	)
	{
		oCh_Service_HostBuilder(
				_service
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCh_Service_LogRetentionDaysErrorBuilder(
		aiden_interfaces.proxies.Service _service
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.OCh_Service_LogRetentionDaysError");
		builder = builder.withParam("Service", _service);
		return builder;
	}

	public static void oCh_Service_LogRetentionDaysError(
		IContext context,
		aiden_interfaces.proxies.Service _service
	)
	{
		oCh_Service_LogRetentionDaysErrorBuilder(
				_service
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCh_Service_LogRetentionDaysSuccesBuilder(
		aiden_interfaces.proxies.Service _service
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.OCh_Service_LogRetentionDaysSucces");
		builder = builder.withParam("Service", _service);
		return builder;
	}

	public static void oCh_Service_LogRetentionDaysSucces(
		IContext context,
		aiden_interfaces.proxies.Service _service
	)
	{
		oCh_Service_LogRetentionDaysSuccesBuilder(
				_service
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_AzureMetric_AddMetricBuilder(
		java.util.List<aiden_interfaces.proxies.AzureMetric> _azureMetricList,
		java.lang.String _metricName,
		java.math.BigDecimal _metricValue
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.SUB_AzureMetric_AddMetric");
		builder = builder.withParam("AzureMetricList", _azureMetricList);
		builder = builder.withParam("MetricName", _metricName);
		builder = builder.withParam("MetricValue", _metricValue);
		return builder;
	}

	public static void sUB_AzureMetric_AddMetric(
		IContext context,
		java.util.List<aiden_interfaces.proxies.AzureMetric> _azureMetricList,
		java.lang.String _metricName,
		java.math.BigDecimal _metricValue
	)
	{
		sUB_AzureMetric_AddMetricBuilder(
				_azureMetricList,
				_metricName,
				_metricValue
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_AzureMetric_AddPropertyBuilder(
		java.util.List<aiden_interfaces.proxies.AzureMetricProperty> _azureMetricPropertyList,
		java.lang.String _key,
		java.lang.String _value
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.SUB_AzureMetric_AddProperty");
		builder = builder.withParam("AzureMetricPropertyList", _azureMetricPropertyList);
		builder = builder.withParam("Key", _key);
		builder = builder.withParam("Value", _value);
		return builder;
	}

	public static void sUB_AzureMetric_AddProperty(
		IContext context,
		java.util.List<aiden_interfaces.proxies.AzureMetricProperty> _azureMetricPropertyList,
		java.lang.String _key,
		java.lang.String _value
	)
	{
		sUB_AzureMetric_AddPropertyBuilder(
				_azureMetricPropertyList,
				_key,
				_value
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_AzureMetric_PostRequestBuilder(
		java.util.List<aiden_interfaces.proxies.AzureMetric> _azureMetricList,
		java.util.List<aiden_interfaces.proxies.AzureMetricProperty> _azureMetricPropertyList,
		aiden_interfaces.proxies.CommonMetricData _commonMetricData
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.SUB_AzureMetric_PostRequest");
		builder = builder.withParam("AzureMetricList", _azureMetricList);
		builder = builder.withParam("AzureMetricPropertyList", _azureMetricPropertyList);
		builder = builder.withParam("CommonMetricData", _commonMetricData);
		return builder;
	}

	public static void sUB_AzureMetric_PostRequest(
		IContext context,
		java.util.List<aiden_interfaces.proxies.AzureMetric> _azureMetricList,
		java.util.List<aiden_interfaces.proxies.AzureMetricProperty> _azureMetricPropertyList,
		aiden_interfaces.proxies.CommonMetricData _commonMetricData
	)
	{
		sUB_AzureMetric_PostRequestBuilder(
				_azureMetricList,
				_azureMetricPropertyList,
				_commonMetricData
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_AzureMetric_PostRequestBasicBuilder(
		aiden_interfaces.proxies.CommonMetricData _commonMetricData
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.SUB_AzureMetric_PostRequestBasic");
		builder = builder.withParam("CommonMetricData", _commonMetricData);
		return builder;
	}

	public static void sUB_AzureMetric_PostRequestBasic(
		IContext context,
		aiden_interfaces.proxies.CommonMetricData _commonMetricData
	)
	{
		sUB_AzureMetric_PostRequestBasicBuilder(
				_commonMetricData
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_CleanupSettingsBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.SUB_CleanupSettings");
		return builder;
	}

	public static void sUB_CleanupSettings(IContext context)
	{
		sUB_CleanupSettingsBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_EncryptValuesOnHostBuilder(
		aiden_interfaces.proxies.Host _hosts
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.SUB_EncryptValuesOnHost");
		builder = builder.withParam("Hosts", _hosts);
		return builder;
	}

	public static void sUB_EncryptValuesOnHost(
		IContext context,
		aiden_interfaces.proxies.Host _hosts
	)
	{
		sUB_EncryptValuesOnHostBuilder(
				_hosts
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_EncryptValuesOnServiceBuilder(
		aiden_interfaces.proxies.Service _service
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.SUB_EncryptValuesOnService");
		builder = builder.withParam("Service", _service);
		return builder;
	}

	public static void sUB_EncryptValuesOnService(
		IContext context,
		aiden_interfaces.proxies.Service _service
	)
	{
		sUB_EncryptValuesOnServiceBuilder(
				_service
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_FormatDateTime_RFC_1123Builder(
		java.util.Date _dateTime
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.SUB_FormatDateTime_RFC_1123");
		builder = builder.withParam("DateTime", _dateTime);
		return builder;
	}

	public static java.lang.String sUB_FormatDateTime_RFC_1123(
		IContext context,
		java.util.Date _dateTime
	)
	{
		Object result = sUB_FormatDateTime_RFC_1123Builder(
				_dateTime
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_GenerateUrlAndAuthorizationStringBuilder(
		java.lang.String _function,
		aiden_interfaces.proxies.QueryHelper _queryHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.SUB_GenerateUrlAndAuthorizationString");
		builder = builder.withParam("Function", _function);
		builder = builder.withParam("QueryHelper", _queryHelper);
		return builder;
	}

	public static aiden_interfaces.proxies.Service sUB_GenerateUrlAndAuthorizationString(
		IContext context,
		java.lang.String _function,
		aiden_interfaces.proxies.QueryHelper _queryHelper
	)
	{
		Object result = sUB_GenerateUrlAndAuthorizationStringBuilder(
				_function,
				_queryHelper
			)
			.execute(context);
		return result == null ? null : aiden_interfaces.proxies.Service.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_Token_CleanupBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.SUB_Token_Cleanup");
		return builder;
	}

	public static void sUB_Token_Cleanup(IContext context)
	{
		sUB_Token_CleanupBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_Token_GetOrCreateBuilder(
		aiden_interfaces.proxies.Host _host,
		aiden_interfaces.proxies.QueryHelper _queryHelper,
		boolean _logErrorIfNotConfigured
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.SUB_Token_GetOrCreate");
		builder = builder.withParam("Host", _host);
		builder = builder.withParam("QueryHelper", _queryHelper);
		builder = builder.withParam("LogErrorIfNotConfigured", _logErrorIfNotConfigured);
		return builder;
	}

	public static aiden_interfaces.proxies.Token sUB_Token_GetOrCreate(
		IContext context,
		aiden_interfaces.proxies.Host _host,
		aiden_interfaces.proxies.QueryHelper _queryHelper,
		boolean _logErrorIfNotConfigured
	)
	{
		Object result = sUB_Token_GetOrCreateBuilder(
				_host,
				_queryHelper,
				_logErrorIfNotConfigured
			)
			.execute(context);
		return result == null ? null : aiden_interfaces.proxies.Token.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_Token_PostAzureMetricBuilder(
		boolean _logErrorIfNotConfigured,
		aiden_interfaces.proxies.TransactionLog _transactionLog,
		aiden_interfaces.proxies.Host _host,
		aiden_interfaces.proxies.ENUM_Environment _environment,
		aiden_interfaces.proxies.ENUM_MetricStatus _metricStatus
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.SUB_Token_PostAzureMetric");
		builder = builder.withParam("LogErrorIfNotConfigured", _logErrorIfNotConfigured);
		builder = builder.withParam("TransactionLog", _transactionLog);
		builder = builder.withParam("Host", _host);
		builder = builder.withParam("Environment", _environment == null ? null : _environment.name());
		builder = builder.withParam("MetricStatus", _metricStatus == null ? null : _metricStatus.name());
		return builder;
	}

	public static void sUB_Token_PostAzureMetric(
		IContext context,
		boolean _logErrorIfNotConfigured,
		aiden_interfaces.proxies.TransactionLog _transactionLog,
		aiden_interfaces.proxies.Host _host,
		aiden_interfaces.proxies.ENUM_Environment _environment,
		aiden_interfaces.proxies.ENUM_MetricStatus _metricStatus
	)
	{
		sUB_Token_PostAzureMetricBuilder(
				_logErrorIfNotConfigured,
				_transactionLog,
				_host,
				_environment,
				_metricStatus
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_Token_RequestNewBuilder(
		aiden_interfaces.proxies.Host _host,
		boolean _logErrorIfNotConfigured,
		aiden_interfaces.proxies.QueryHelper _queryHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.SUB_Token_RequestNew");
		builder = builder.withParam("Host", _host);
		builder = builder.withParam("LogErrorIfNotConfigured", _logErrorIfNotConfigured);
		builder = builder.withParam("QueryHelper", _queryHelper);
		return builder;
	}

	public static aiden_interfaces.proxies.Token sUB_Token_RequestNew(
		IContext context,
		aiden_interfaces.proxies.Host _host,
		boolean _logErrorIfNotConfigured,
		aiden_interfaces.proxies.QueryHelper _queryHelper
	)
	{
		Object result = sUB_Token_RequestNewBuilder(
				_host,
				_logErrorIfNotConfigured,
				_queryHelper
			)
			.execute(context);
		return result == null ? null : aiden_interfaces.proxies.Token.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_TransactionLog_CleanupBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.SUB_TransactionLog_Cleanup");
		return builder;
	}

	public static void sUB_TransactionLog_Cleanup(IContext context)
	{
		sUB_TransactionLog_CleanupBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_TransactionLog_CleanupForServiceBuilder(
		aiden_interfaces.proxies.Service _service,
		aiden_interfaces.proxies.ENUM_Result _result,
		java.lang.Long _retentionDays
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.SUB_TransactionLog_CleanupForService");
		builder = builder.withParam("Service", _service);
		builder = builder.withParam("Result", _result == null ? null : _result.name());
		builder = builder.withParam("RetentionDays", _retentionDays);
		return builder;
	}

	public static void sUB_TransactionLog_CleanupForService(
		IContext context,
		aiden_interfaces.proxies.Service _service,
		aiden_interfaces.proxies.ENUM_Result _result,
		java.lang.Long _retentionDays
	)
	{
		sUB_TransactionLog_CleanupForServiceBuilder(
				_service,
				_result,
				_retentionDays
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_UpdateAndCommitTransactionBuilder(
		aiden_interfaces.proxies.Transaction _transaction
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Aiden_Interfaces.SUB_UpdateAndCommitTransaction");
		builder = builder.withParam("Transaction", _transaction);
		return builder;
	}

	public static void sUB_UpdateAndCommitTransaction(
		IContext context,
		aiden_interfaces.proxies.Transaction _transaction
	)
	{
		sUB_UpdateAndCommitTransactionBuilder(
				_transaction
			)
			.execute(context);
	}
}
